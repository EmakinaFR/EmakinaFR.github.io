---
layout: post
title: Refacthon
author: Chlo√© Avoustin, Julien Hochgenug
banner: /vlad-hilitanu-1FI2QAYPa-Y-unsplash.jpg
categories: D√©veloppement
---
Savoir coder, c‚Äôest bien. Bien communiquer, transmettre de la connaissance et partager les m√™mes valeurs que les autres
d√©veloppeurs de son √©quipe : c‚Äôest mieux !

La r√©ponse la plus √©vidente pour r√©pondre √† ce besoin est la revue de code. Les b√©n√©fices de cette m√©thode sont
multiples : limiter les erreurs humaines, partager la responsabilit√© du code envoy√© en production et monter en
comp√©tences sur le projet‚Ä¶ Mais, sur le terrain, est-ce vraiment suffisant ?

Force est de constater que cette m√©thode provoque n√©anmoins des d√©rives. Nous avons tous connu des discussions √† coups
de commentaires interpos√©s souvent concis, subjectifs et qui peuvent g√©n√©rer de la frustration. Nos interactions
humaines s‚Äô√©rodent dans le temps, une routine qui s‚Äôinstalle et la qualit√© du code produit n‚Äôest plus au centre de notre
pr√©occupation.

> Pour rem√©dier √† tout √ßa, avez-vous d√©j√† pens√© √† instaurer des rituels d√©di√©s uniquement aux d√©veloppeurs ?

Voici une proposition avec un principe simple : un meeting hebdomadaire de 30 minutes, montre en main. Les sujets de
discussions doivent se concentrer uniquement sur de la conception de code et sur les pratiques communes √† appliquer.

## üëâ Les 3 r√®gles √† suivre :
  - La conception doit rester inchang√©e.
  - Le code doit rester iso-fonctionnel. Les modifications du code ne doivent pas influer sur le comportement de la
fonctionnalit√©.
  - Le code doit rester
iso-bug. Si on rencontre des probl√®mes, on ne les corrige pas directement et on cr√©e un ticket pour le r√©soudre plus
tard.
On peut rajouter une notation `/* FIXME */` dans le code.

## üëÄ Comment cela se passe concr√®tement :
  - Un pr√©sentateur est d√©sign√© pour la s√©ance, il faut que √ßa tourne chaque semaine.
  - Le pr√©sentateur projette aux autres d√©veloppeurs le code s√©lectionn√© pr√©alablement. Le mieux est d‚Äôavoir une petite
liste o√π l‚Äôon peut indiquer des parties de code √† analyser afin de venir piocher les id√©es pendant la r√©union.
  - Les d√©veloppeurs doivent donner leurs avis sur le code pr√©sent√© et se mettre d‚Äôaccord sur les pratiques communes √†
appliquer.


Lors de ces sessions, il est important de garder en t√™te que les d√©cisions sont prises de fa√ßon d√©mocratique.
L‚Äôexp√©rience, la position hi√©rarchique, l‚Äôanciennet√© ne peuvent pas influer sur la prise de d√©cision. Seule la qualit√©,
la maintenabilit√© et la simplicit√© du code comptent. Si vous avez une id√©e, il est donc important de la partager,
gardons en t√™te que l‚Äôobjectif est d‚Äôouvrir les discussions et de s‚Äôam√©liorer ensemble.

#### Exemple de discussions possibles autour du code :
  - Doit-on mettre des commentaires dans ce cas-l√† ?
  - √Ä partir de quand doit-on faire du refactoring ?
  - Parler des conventions de code et les faire √©voluer au besoin.
  - La programmation d√©fensive est-elle n√©cessaire dans tous les cas ?
  - Existe-t-il des bonnes pratiques sur ce sujet ?

> Les bienfaits de ce rituel est d‚Äôobtenir des pratiques communes approuv√©es par la majorit√© afin de standardiser au maximum
le code.

Nous allons √©prouver cette m√©thode en interne et reviendrons dans un prochain article avec notre retour d‚Äôexp√©rience sur
la mise en place de ce nouveau rituel.
